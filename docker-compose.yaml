version: '3.12'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8001"
    ports:
      - "8001:8001"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - celery_worker
      - celery_beat

  db:
    image: postgres:13
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./backup:/backup
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    ports:
      - "6379:6379"  # Открываем порт Redis для доступа с хоста

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      bash -c "celery -A config worker -l info"
    env_file:
      - .env
    depends_on:
      - db
      - redis
    volumes:
      - .:/app

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      bash -c "celery -A config beat -l info"
    env_file:
      - .env
    depends_on:
      - db
      - redis
    volumes:
      - .:/app

volumes:
  postgres_data:
